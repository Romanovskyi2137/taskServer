openapi: 3.0.0
info:
  title: backend app for react  task manager
  description: RESTful web api, manage data of user tasks, 
              app interacts with MongoDB and have registration and JWT authorization.
  license:
    name: some license
  contact: 
    email: romanovskiy2137@gmail.com
  version: 0.0.1
servers: 
  - url: https://task-server-m418.onrender.com/
    description: main server
tags:
  - name: authorization 
    description: authorization and registration operations
  - name: task_space
    description: Getting, adding, updating and removing data of user.
paths:
  /authorization/registration: 
    post: 
      tags:
        - authorization
      description: sending registration form to the server
      requestBody:
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/AuthForm'
      responses:
        "200": 
          description: success
          content: 
            application/json: {}
        "default":
          description: something goes wrong
          content:
            appllication/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/ErrorSchema"

  /authorization/login: 
    post: 
      tags:
        - authorization
      description: try to login user and send JWT authorization token as response
      requestBody:
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/AuthForm'
      responses:
        "200": 
          description: success
          content: 
            application/json:
              schema:
                  $ref: "#/components/schemas/JWTtoken"
        "default":
          description: something goes wrong
          content:
            appllication/json:
              schema:
                  $ref: "#/components/schemas/ErrorSchema"
                  
  /authorization/google_login: 
    post: 
      tags:
        - authorization
      description: try to login user and send JWT authorization token as response, by using google+firebase servises
      requestBody:
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/AuthForm'
      responses:
        "200": 
          description: success
          content: 
            application/json:
              schema:
                  $ref: "#/components/schemas/JWTtoken"
        "default":
          description: something goes wrong
          content:
            appllication/json:
              schema:
                  $ref: "#/components/schemas/ErrorSchema"

  /task_space/one/{:taskID}: 
    get: 
      tags:
        - task_space
      description: get task by id
      parameters:
        - name: :taskID
          in: path
          required: true
          schema:
            type: string
      security: 
        - Authorization: 
          - Authorization
      responses:
        "200": 
          description: success
          content: 
            application/json:
              schema:
                  $ref: "#/components/schemas/TaskModel"
        "default":
          description: something goes wrong
          content:
            appllication/json:
              schema:
                  $ref: "#/components/schemas/ErrorSchema"
                  
  /task_space/all:
    get: 
      tags:
        - task_space
      description: get all tasks of user
      security: 
        - Authorization: 
          - Authorization
      responses:
        "200": 
          description: success
          content: 
            application/json:
              schema:
                  $ref: "#/components/schemas/TasksScheme"
        "default":
          description: something goes wrong
          content:
            appllication/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/ErrorSchema"
                  
  /task_space/current:
      get: 
        tags:
          - task_space
        description: get current tasks of user
        security: 
          - Authorization: 
            - Authorization
        responses:
          "200": 
            description: success
            content: 
              application/json:
                schema:
                    $ref: "#/components/schemas/TasksScheme"
          "default":
            description: something goes wrong
            content:
              appllication/json:
                schema:
                  type: object
                  items:
                    $ref: "#/components/schemas/ErrorSchema" 
                    
  /task_space/complete:
      get: 
        tags:
          - task_space
        description: get all tasks of user
        security: 
          - Authorization: 
            - Authorization
        responses:
          "200": 
            description: success
            content: 
              application/json:
                schema:
                    $ref: "#/components/schemas/TasksScheme"
          "default":
            description: something goes wrong
            content:
              appllication/json:
                schema:
                  type: object
                  items:
                    $ref: "#/components/schemas/ErrorSchema"
                    
  /task_space/today:
    get: 
      tags:
        - task_space
      description: get all tasks of user for current day
      security: 
        - Authorization: 
          - Authorization
      responses:
        "200": 
          description: success
          content: 
            application/json:
              schema:
                  $ref: "#/components/schemas/TasksScheme"
        "default":
          description: something goes wrong
          content:
            appllication/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/ErrorSchema"
                  
  /task_space/urgently:
    get: 
      tags:
        - task_space
      description: get all urgently tasks of user, means the time from current time to endPoint less than 3 days
      security: 
        - Authorization: 
          - Authorization
      responses:
        "200": 
          description: success
          content: 
            application/json:
              schema:
                  $ref: "#/components/schemas/TasksScheme"
        "default":
          description: something goes wrong
          content:
            appllication/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/ErrorSchema"
                                    
  /task_space/major:
    get: 
      tags:
        - task_space
      description: get all major  tasks of user, means the prior of the task is 3
      security: 
        - Authorization: 
          - Authorization
      responses:
        "200": 
          description: success
          content: 
            application/json:
              schema:
                  $ref: "#/components/schemas/TasksScheme"
        "default":
          description: something goes wrong
          content:
            appllication/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/ErrorSchema"
                    
  /task_space/create:
      post: 
        tags:
          - task_space
        description: create new task
        security: 
          - Authorization: 
            - Authorization
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskModel"
        responses:
          "200": 
            description: success
            content: 
              application/json:
                schema:
                    $ref: "#/components/schemas/TasksScheme"
          "default":
            description: something goes wrong
            content:
              appllication/json:
                schema:
                    $ref: "#/components/schemas/ErrorSchema"
                    
  /task_space/replace:
    put: 
        tags:
          - task_space
        description: replace task from one list to other(current/complete)
        security: 
          - Authorization: 
            - Authorization
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplaceScheme"
        responses:
          "200": 
            description: success
            content: 
              application/json:
                schema:
                    $ref: "#/components/schemas/TasksScheme"
          "default":
            description: something goes wrong
            content:
              appllication/json:
                schema:
                    $ref: "#/components/schemas/ErrorSchema"
  
  /task_space/change:
    put: 
        tags:
          - task_space
        description: put changes to the task
        security: 
          - Authorization: 
            - Authorization
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskModel"
        responses:
          "200": 
            description: success
            content: 
              application/json:
                schema:
                    $ref: "#/components/schemas/TasksScheme"
          "default":
            description: something goes wrong
            content:
              appllication/json:
                schema:
                    $ref: "#/components/schemas/ErrorSchema"
  
  /task_space/delete/{:taskID}:
    delete: 
        tags:
          - task_space
        description: delete task by id
        security: 
          - Authorization: 
            - Authorization
        parameters:
          - name: :taskID
            required: true
            in: path
            schema:
              type: 
                string
            
        responses:
          "200": 
            description: success
            content: 
              application/json:
                schema:
                    $ref: "#/components/schemas/TasksScheme"
          "default":
            description: something goes wrong
            content:
              appllication/json:
                schema:
                    $ref: "#/components/schemas/ErrorSchema"





components:
  schemas:
        AuthForm:
            type: object
            required:
              - username
              - password
            properties:
              username:
                type: string
                example: "myUserName01"
              password:
                type: string
                example: "myPassword01"
                
        TaskModel:
            type: object
            required:
              - title
              - body
              - prior
              - endPoint
              - iconClassName
              - id
            properties:
              title:
                type: string
              body:
                type: string
              prior:
                type: integer
              iconClassName:
                type: string
              id:
                type: string
              endPoint:
                type: string
                
        TasksScheme:
            type: array
            items: 
              $ref: "#/components/schemas/TaskModel"
        
        ReplaceScheme:
            type: object
            required:
              - id
              - replaceType
            properties:
              id: 
                type: string
              replaceType:
                type: string
                example: "to_complete/to_current"
                
        ErrorSchema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
        JWTtoken:
          type: object
          required:
           - token
          properties:
            token:
              type: string
              example: "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YTUyMTAwNDAzM2FkZWNlMTg5YzQ4NSIsInJvbGUiOlsiQURNSU4iXSwiaWF0IjoxNjg5NDEwNDQ3LCJleHAiOjE2ODk0NTM2NDd9.EHOeirfasut7as3pI8E2HxMxHmNraXkUTBhenJEcFzQ"
  
  securitySchemes:
    Authorization:
      scheme: bearer
      type: http
      bearerFormat: JWT
  
  
  
  requestBodies:
            AuthForm:
              description: username and password from client
              required: true
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/AuthForm"
                    
                    
                    
                    
                    
                    
                    
                    
              